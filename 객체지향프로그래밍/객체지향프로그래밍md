Kotlin
java JVM에서 동작
spring framework도 지원

kotlinlang.org > play로 이용해서 수업을 진행
Docs 공식문서
Play 온라인 컴파일러

하나의 파일에 두개 이상의 클래스를 지정 할 수 있으므로 하나의 클래스만 사용할 경우 파일명과 동일하게 사용 / 함수이름은 _를 사용하지않음

==연산자: java에서는 참조(레퍼런스) 주소값을 비교함
string s1 = "a";
string s2 = "b"; // string s2 = s1 -> true;
s1==s2; // false

함수에 {}를 무조건 적어야하는 것은 아님

평가과정: 사칙연산 / 비교(true / false) / 변수 / 함수 호출(return 한 값) 등 계산을 걸치는 모든 과정

값을 한번만 할당가능(val)
  - 선언 후 바로 할당 시 타입은 생략가능(적어도 관계없음)
값을 여러번 할당가능(var)

NULL값 허용: type 뒤에 ?를 붙여줘야 null을 허용함..

val b: String? = null // 널이 아닌 경우에만 다음 코드 실행
println(b?.length)

for main() {
  var b:String? = 'ABC'
  var c:String? = b!!
  print()
}


PPT P.37 참고
java의 람다식
-> 파라미터가 하나만 있을 경우 it으로 사용할 수 있다

array.find: 값을 하나라도 찾으면 코드 실행을 멈춤

val x: String? = y as? String
: 타입을 바꿀 수 없는 경우 null을 반환..

// 2번째 시간
if문을 exprssion을 사용할 경우 else문을 꼭 적어 줘야함.
  -> else문을 적지 않으면 반환값이 없는 경우도 발생


When: 처음 나오는 문법이라서 작성하는데 있어서 문법이 생각나지 않을 수 있다...
```Kotlin
when(x) {
  in 1..10 -> print("x is in the range")
  in validNumbers -> print("x is valid")
  !in 10..20 -> print("x is outside the range")
  else -> print("none of the above")
}
```
수업 여기까지(java개발자를 위한 kotiln_2.pdf 25/37)
while -5 5 사이의 수를 random으로 생성..